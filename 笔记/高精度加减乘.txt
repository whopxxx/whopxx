#include<iostream>
#include<vector>
using namespace std;

bool cmp(vector<int> &A,vector<int> &B) // 比较函数
{
    if(A.size()!=B.size()) return A.size()>B.size();
    for(int i=A.size()-1;i>=0;i--)
        if(A[i]!=B[i])
            return A[i]>B[i];
    return true;
}

vector<int> add(vector<int> &A,vector<int> &B) // 高精度加法
{
    vector<int> res;
    for(int i=0,t=0;i<A.size() || i<B.size() || t;i++)
    {
        if(i<A.size()) t+=A[i];
        if(i<B.size()) t+=B[i];
        res.push_back(t%10);
        t/=10;
    }
    return res;
}

vector<int> sub(vector<int> &A,vector<int> &B) // 高精度减法
{
    vector<int> res;
    for(int i=0,t=0;i<A.size();i++)
    {
        t=A[i]-t;
        if(i<B.size()) t-=B[i];
        res.push_back((t+10)%10);
        if(t<0) t=1;
        else t=0;
    }
    while(res.size()>1 && res.back()==0) res.pop_back();
    return res;
}

vector<int> mul(vector<int> &A,vector<int> &B) // 高精度乘法
{
    vector<int> res(A.size()+B.size(),0);
    for(int i=0;i<A.size();i++)
        for(int j=0;j<B.size();j++)
            res[i+j]+=A[i]*B[j];
    for(int i=0,t=0;i<res.size();i++)
    {
        t+=res[i];
        res[i]=t%10;
        t/=10;
    }
    while(res.size()>1 && res.back()==0) res.pop_back();
    return res;
}

int main()
{
    vector<int> A,B,C,D,E; // C加法,D减法,E乘法
    string a,b;
    cin>>a>>b;
    for(int i=a.size()-1;i>=0;i--) // 输入a
        if(a[i]!='-') A.push_back(a[i]-'0');
    for(int i=b.size()-1;i>=0;i--) // 输入b
        if(b[i]!='-') B.push_back(b[i]-'0');

    // 输出加,减,乘三种运算结果
    if(a[0]!='-' && b[0]!='-') // 即a+b,a-b,a*b
    {
        C=add(A,B); // 加法
        for(int i=C.size()-1;i>=0;i--) cout<<C[i]; cout<<endl;

        if(cmp(A,B)) D=sub(A,B); // 减法
        else 
        {
            D=sub(B,A);
            cout<<'-';
        }
        for(int i=D.size()-1;i>=0;i--) cout<<D[i]; cout<<endl;

        E=mul(A,B); // 乘法
        for(int i=E.size()-1;i>=0;i--) cout<<E[i]; cout<<endl;
    }
    else if(a[0]=='-' && b[0]=='-') // 即(-a)+(-b),(-a)-(-b),(-a)*(-b)
    {
        C=add(A,B); // 加法
        cout<<'-';
        for(int i=C.size()-1;i>=0;i--) cout<<C[i]; cout<<endl;

        if(cmp(A,B)) 
        {
            D=sub(A,B); // 减法
            cout<<'-';
        }
        else D=sub(B,A);
        for(int i=D.size()-1;i>=0;i--) cout<<D[i]; cout<<endl;

        E=mul(A,B); // 乘法
        for(int i=E.size()-1;i>=0;i--) cout<<E[i]; cout<<endl;
    }
    else if(a[0]=='-' && b[0]!='-') // (-a)+b,(-a)-b,(-a)*b
    {
        if(cmp(A,B)) 
        {
            D=sub(A,B); // 加法
            cout<<'-';
        }
        else D=sub(B,A);
        for(int i=D.size()-1;i>=0;i--) cout<<D[i]; cout<<endl;

        C=add(A,B); // 减法
        cout<<'-';
        for(int i=C.size()-1;i>=0;i--) cout<<C[i]; cout<<endl;

        E=mul(A,B); // 乘法
        cout<<'-';
        for(int i=E.size()-1;i>=0;i--) cout<<E[i]; cout<<endl;
    }
    else if(a[0]!='-' && b[0]=='-') // a+(-b),a-(-b),a*(-b)
    {
        if(cmp(A,B)) D=sub(A,B); // 加法
        else 
        {
            D=sub(B,A);
            cout<<'-';
        }
        for(int i=D.size()-1;i>=0;i--) cout<<D[i]; cout<<endl;

        C=add(A,B); // 减法
        for(int i=C.size()-1;i>=0;i--) cout<<C[i]; cout<<endl;

        E=mul(A,B); // 乘法
        cout<<'-';
        for(int i=E.size()-1;i>=0;i--) cout<<E[i]; cout<<endl;
    }
    return 0;
}
