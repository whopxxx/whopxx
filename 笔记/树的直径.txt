
//求树的直径
//两遍dfs
#include<bits/stdc++.h>
using namespace std;

struct P{
    int b,w;  
};

const int N = 100010;
vector<P>g[N];
int d[N];
int n;
void dfs(int u,int f){
    for(int i = 0 ; i < g[u].size(); i++){
        int j = g[u][i].b;
        int w = g[u][i].w;
        if(j != f){
            d[j] = d[u] + w;
            dfs(j,u);
        }
    }
}

int main(){
    cin >> n;
    for(int i = 1; i <= n - 1; i++){
        int a,b,c;
        cin >> a >> b >> c;
        g[a].push_back({b,c});
        g[b].push_back({a,c});
    }
    
    memset(d,0,sizeof d);
    dfs(1,-1);
    int u = 1;
    for(int i = 1; i <= n ; i++){
        if(d[i] > d[u])u = i;
    }
    
    memset(d,0,sizeof d);
    dfs(u,-1);
    for(int i = 1; i <= n ; i++){
        if(d[i] > d[u])u = i;
    }
    long long  s = d[u];
    cout << 10*s + (1LL + s)*s/2 << endl;
    return 0;
}