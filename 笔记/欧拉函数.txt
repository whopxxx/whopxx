#include<bits/stdc++.h>
using namespace std;
const int N = 100010;

int p[N],vis[N],cnt;
int phi[N];//欧拉函数

void get_phi(int n){
    phi[1] = 1;//1的情况
    for(int i = 2;i <= n; i++){
        if(!vis[i]){//质数
            p[cnt++] = i;
            phi[i] = i - 1;//质数时
        }
        for(int j = 0; i * p[j] <= n; j++){
            int m = i * p[j];
            vis[m] = 1;
            if(i % p[j] == 0){//i包含了m的所有质因子
                phi[m] = p[j] * phi[i];
                break;
            }
            else phi[m] = (p[j] - 1) * phi[i];//i和pj是互质的
        }
    }
}


int main(){
    int n;
    cin >> n;
    get_phi(n);
    for(int i = 1; i <= 10; i++){
        cout << i << ' ' << phi[i] << endl;
    }
    
    return 0;
}


#include<bits/stdc++.h>
using namespace std;
const int N = 1000010;

int p[N],cnt;
bool vis[N];
void whp(int n){
    for(int i = 2; i <= n; i++){
        if(!vis[i])p[cnt++] = i;
        for(int j = 0; p[j] * i <= n; j++){
            vis[p[j] * i] = 1;
            if(i % p[j] == 0)break;
        }
    }
}
int main(){
    whp(N - 1);
    int t;
    scanf("%d",&t);
    while(t--){
        int n;
        scanf("%d",&n);
        int ans = n;
        for(int i = 0 ; p[i] <= n/p[i]; i++){
            if(n % p[i] == 0){
                ans = ans/p[i] * (p[i] - 1);
                while(n % p[i] == 0)n/=p[i];
            }
        }
        if(n > 1)ans = ans/n*(n - 1);
        printf("%d\n",ans);
    }
    return 0;
}