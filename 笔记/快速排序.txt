#include<iostream>
#include<algorithm>
using namespace std;
const int N = 100010;
//int q[N];
//归并
int q[10000],tmp[10000];
void merge_sort(int l,int r){
    if(l >= r)return;
    int mid = l + r >> 1;
    merge_sort(l,mid);merge_sort(mid + 1,r);
    int i = r,j = mid + 1,k = 0;
    while(i <= mid && j <= r){
        if(q[i] <= q[j])tmp[k++] = q[i++];
        else tmp[k++] = q[j++];
    }
    while(i <= mid)tmp[k++] = q[i++];
    while(j <= mid)tmp[k++] = q[j++];
    for(int i = l,j = 0;i <= r ; i++,j++)q[i] = tmp[j];
}


//快速排序
void kspx(int l,int r,int q[]){
    if(l >= r)return;
    int i = l - 1, j = r + 1,x = q[l + r >> 1];
    while(i < j){
        do i++; while(q[i] < x);
        do j--; while(q[j] > x);
        if(i < j)swap(q[i],q[j]);
    }
    kspx(l,j,q);kspx(j + 1,r,q);
}

int main(){
    int n;
    scanf("%d",&n);
    for(int i = 1; i <= n ;i++)scanf("%d",&q[i]);
    kspx(1,n,q);
    for(int i = 1; i <= n ;i++)printf("%d ",q[i]);
    return 0;
}